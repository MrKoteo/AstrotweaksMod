buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

version = '1.0'
group = 'astrotweaks'
archivesBaseName = 'astrotweaks'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    maven { url 'https://maven.blamejared.com/' }
    maven { url 'https://oss.sonatype.org/content/groups/public/' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'

    compileOnly "mezz.jei:jei_1.12.2:4.16.1.302"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}



// ========== JSON MINIFIER ==========
afterEvaluate {
    processResources {
        doLast {
            def outputDir = destinationDir ?: outputs.files.singleFile
            
            fileTree(dir: outputDir, include: '**/*.json').each { file ->
                try {
                    file.text = groovy.json.JsonOutput.toJson(new groovy.json.JsonSlurper().parse(file))
                } catch (Exception ignore) {}
            }
        }
    }
}